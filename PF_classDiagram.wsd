@startuml Portfolio Class Diagram

!define COMPONENT_COLOR #E3F2FD
!define CONTROLLER_COLOR #F3E5F5
!define DATA_COLOR #E8F5E8
!define MAIN_COLOR #FFF3E0

package "Portfolio Application" {

    class App <<Main Application>> MAIN_COLOR {
        - navigation: NavigationController
        - theme: ThemeController
        - popup: PopupController
        - contact: ContactController
        + constructor()
        + init(): void
    }

    package "Components" <<Controller Layer>> {
        
        abstract class BaseController CONTROLLER_COLOR {
            + constructor()
            + init(): void
            + setupEventListeners(): void
        }

        class NavigationController CONTROLLER_COLOR {
            - menuToggle: HTMLElement
            - nav: HTMLElement
            + constructor()
            + init(): void
            + setupEventListeners(): void
            + toggleMenu(): void
            + closeMenu(): void
        }

        class ThemeController CONTROLLER_COLOR {
            - themeToggle: HTMLElement
            - themeIcon: HTMLElement
            - storageKey: string
            + constructor()
            + init(): void
            + setupEventListeners(): void
            + loadSavedTheme(): void
            + toggleTheme(): void
            + setTheme(isDark: boolean, save: boolean): void
        }

        class PopupController CONTROLLER_COLOR {
            - popup: HTMLElement
            - popupClose: HTMLElement
            - elements: Object
            + constructor()
            + init(): void
            + setupEventListeners(): void
            + openProject(event: Event): void
            + populatePopupContent(project: Project): void
            + showPopup(): void
            + closePopup(): void
        }

        class ContactController CONTROLLER_COLOR {
            - form: HTMLFormElement
            + constructor()
            + init(): void
            + setupEventListeners(): void
            + handleSubmit(event: Event): Promise<void>
            + validateForm(data: FormData): boolean
            + isValidEmail(email: string): boolean
            + submitForm(data: FormData): Promise<void>
            + showSuccess(): void
            + showError(message: string): void
            + showNotification(message: string, type: string): void
        }
    }

    package "Data Layer" <<Data Models>> {
        
        class Project DATA_COLOR {
            + title: string
            + description: string
            + tech: string
            + deployed: string
            + repo: string
        }

        class ProjectsData DATA_COLOR {
            + projects: Map<number, Project>
            + getProject(id: number): Project
            + getAllProjects(): Project[]
        }
    }

    package "DOM Interfaces" <<External Dependencies>> {
        interface HTMLElement COMPONENT_COLOR
        interface HTMLFormElement COMPONENT_COLOR
        interface Event COMPONENT_COLOR
        interface LocalStorage COMPONENT_COLOR
    }
}

' Relaciones de composición
App *-- NavigationController : composes
App *-- ThemeController : composes
App *-- PopupController : composes
App *-- ContactController : composes

' Relaciones de herencia
NavigationController --|> BaseController
ThemeController --|> BaseController
PopupController --|> BaseController
ContactController --|> BaseController

' Relaciones de dependencia
PopupController ..> ProjectsData : uses
PopupController ..> Project : uses
ContactController ..> HTMLFormElement : interacts with

' Relaciones de asociación
NavigationController --> HTMLElement : menuToggle
NavigationController --> HTMLElement : nav
ThemeController --> HTMLElement : themeToggle
ThemeController --> HTMLElement : themeIcon
ThemeController --> LocalStorage : uses
PopupController --> HTMLElement : popup
ContactController --> HTMLFormElement : form

' Relaciones de datos
ProjectsData *-- Project : contains

note top of App : "Clase principal que inicializa\ntodos los componentes del portfolio"

note right of BaseController : "Patrón Template Method\nDefine la estructura común\npara todos los controladores"

note bottom of ProjectsData : "Módulo de datos exportado\nContiene información de proyectos"

note left of PopupController : "Maneja la visualización\nde detalles de proyectos\nen modal"

@enduml